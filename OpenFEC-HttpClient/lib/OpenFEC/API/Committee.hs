{-
   OpenFEC

   This API allows you to explore the way candidates and committees fund their campaigns.    The FEC API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There is a lot of data, but a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in schedule_a.    Get an [API key here](https://api.data.gov/signup/). That will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 120 calls per minute to [APIinfo@fec.gov](mailto:apiinfo@fec.gov). You can also ask questions and discuss the data in the [FEC data Google Group](https://groups.google.com/forum/#!forum/fec-data). API changes will also be added to this group in advance of the change.       The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you can’t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://transition.fec.gov/pages/brochures/saleuse.shtml).    [View our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!

   OpenAPI spec version: 2.0
   OpenFEC API version: 1.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : OpenFEC.API.Committee
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenFEC.API.Committee where

import OpenFEC.Core
import OpenFEC.MimeTypes
import OpenFEC.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Committee

-- *** candidateCandidateIdCommitteesGet

-- | @GET \/candidate\/{candidate_id}\/committees\/@
-- 
--  This endpoint is useful for finding detailed information about a particular committee or filer. Use the `committee_id` to find the most recent information about the committee. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
candidateCandidateIdCommitteesGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CandidateIdText -- ^ "candidateId" -   A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
  -> OpenFECRequest CandidateCandidateIdCommitteesGet MimeNoContent CommitteeDetailPage MimeJSON
candidateCandidateIdCommitteesGet (ApiKey apiKey) (CandidateIdText candidateId) =
  _mkRequest "GET" ["/candidate/",toPath candidateId,"/committees/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CandidateCandidateIdCommitteesGet  

-- | /Optional Param/ "year" - A year that the committee was active— (after original registration date     or filing but before expiration date)
instance HasOptionalParam CandidateCandidateIdCommitteesGet Year[Int] where
  applyOptionalParam req (Year[Int] xs) =
    req `setQuery` toQueryColl MultiParamArray ("year", Just xs)

-- | /Optional Param/ "organization_type" - The one-letter code for the kind for organization:         - C corporation         - L labor organization         - M membership organization         - T trade association         - V cooperative         - W corporation without capital stock 
instance HasOptionalParam CandidateCandidateIdCommitteesGet OrganizationType where
  applyOptionalParam req (OrganizationType xs) =
    req `setQuery` toQueryColl MultiParamArray ("organization_type", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CandidateCandidateIdCommitteesGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CandidateCandidateIdCommitteesGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam CandidateCandidateIdCommitteesGet CommitteeType2 where
  applyOptionalParam req (CommitteeType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_type", Just xs)

-- | /Optional Param/ "designation" - The one-letter designation code of the organization:          - A authorized by a candidate          - J joint fundraising committee          - P principal campaign committee of a candidate          - U unauthorized          - B lobbyist/registrant PAC          - D leadership PAC 
instance HasOptionalParam CandidateCandidateIdCommitteesGet Designation where
  applyOptionalParam req (Designation xs) =
    req `setQuery` toQueryColl MultiParamArray ("designation", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CandidateCandidateIdCommitteesGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "filing_frequency" - The one-letter      code of the filing frequency:          - A Administratively terminated          - D Debt          - M Monthly filer          - Q Quarterly filer          - T Terminated          - W Waived 
instance HasOptionalParam CandidateCandidateIdCommitteesGet FilingFrequency where
  applyOptionalParam req (FilingFrequency xs) =
    req `setQuery` toQueryColl MultiParamArray ("filing_frequency", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CandidateCandidateIdCommitteesGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  A two year election cycle that the committee was active- (after original registration date but before expiration date in FEC Form 1s) The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CandidateCandidateIdCommitteesGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CandidateCandidateIdCommitteesGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces CandidateCandidateIdCommitteesGet MimeJSON


-- *** candidateCandidateIdCommitteesHistoryCycleGet

-- | @GET \/candidate\/{candidate_id}\/committees\/history\/{cycle}\/@
-- 
--  Explore a filer's characteristics over time. This can be particularly useful if the committees change treasurers, designation, or `committee_type`. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
candidateCandidateIdCommitteesHistoryCycleGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CycleInt -- ^ "cycle" -   A two year election cycle that the committee was active- (after original registration date but before expiration date in FEC Form 1s) The cycle begins with an odd year and is named for its ending, even year. 
  -> CandidateIdText -- ^ "candidateId" -   A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
  -> OpenFECRequest CandidateCandidateIdCommitteesHistoryCycleGet MimeNoContent CommitteeHistoryPage MimeJSON
candidateCandidateIdCommitteesHistoryCycleGet (ApiKey apiKey) (CycleInt cycle) (CandidateIdText candidateId) =
  _mkRequest "GET" ["/candidate/",toPath candidateId,"/committees/history/",toPath cycle,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CandidateCandidateIdCommitteesHistoryCycleGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryCycleGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryCycleGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryCycleGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryCycleGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryCycleGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "election_full" - Aggregate values over full election period
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryCycleGet ElectionFull where
  applyOptionalParam req (ElectionFull xs) =
    req `setQuery` toQuery ("election_full", Just xs)
-- | @application/json@
instance Produces CandidateCandidateIdCommitteesHistoryCycleGet MimeJSON


-- *** candidateCandidateIdCommitteesHistoryGet

-- | @GET \/candidate\/{candidate_id}\/committees\/history\/@
-- 
--  Explore a filer's characteristics over time. This can be particularly useful if the committees change treasurers, designation, or `committee_type`. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
candidateCandidateIdCommitteesHistoryGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CandidateIdText -- ^ "candidateId" -   A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
  -> OpenFECRequest CandidateCandidateIdCommitteesHistoryGet MimeNoContent CommitteeHistoryPage MimeJSON
candidateCandidateIdCommitteesHistoryGet (ApiKey apiKey) (CandidateIdText candidateId) =
  _mkRequest "GET" ["/candidate/",toPath candidateId,"/committees/history/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CandidateCandidateIdCommitteesHistoryGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "election_full" - Aggregate values over full election period
instance HasOptionalParam CandidateCandidateIdCommitteesHistoryGet ElectionFull where
  applyOptionalParam req (ElectionFull xs) =
    req `setQuery` toQuery ("election_full", Just xs)
-- | @application/json@
instance Produces CandidateCandidateIdCommitteesHistoryGet MimeJSON


-- *** committeeCommitteeIdGet

-- | @GET \/committee\/{committee_id}\/@
-- 
--  This endpoint is useful for finding detailed information about a particular committee or filer. Use the `committee_id` to find the most recent information about the committee. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdGet MimeNoContent CommitteeDetailPage MimeJSON
committeeCommitteeIdGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdGet  

-- | /Optional Param/ "year" - A year that the committee was active— (after original registration date     or filing but before expiration date)
instance HasOptionalParam CommitteeCommitteeIdGet Year[Int] where
  applyOptionalParam req (Year[Int] xs) =
    req `setQuery` toQueryColl MultiParamArray ("year", Just xs)

-- | /Optional Param/ "organization_type" - The one-letter code for the kind for organization:         - C corporation         - L labor organization         - M membership organization         - T trade association         - V cooperative         - W corporation without capital stock 
instance HasOptionalParam CommitteeCommitteeIdGet OrganizationType where
  applyOptionalParam req (OrganizationType xs) =
    req `setQuery` toQueryColl MultiParamArray ("organization_type", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam CommitteeCommitteeIdGet CommitteeType2 where
  applyOptionalParam req (CommitteeType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_type", Just xs)

-- | /Optional Param/ "designation" - The one-letter designation code of the organization:          - A authorized by a candidate          - J joint fundraising committee          - P principal campaign committee of a candidate          - U unauthorized          - B lobbyist/registrant PAC          - D leadership PAC 
instance HasOptionalParam CommitteeCommitteeIdGet Designation where
  applyOptionalParam req (Designation xs) =
    req `setQuery` toQueryColl MultiParamArray ("designation", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "filing_frequency" - The one-letter      code of the filing frequency:          - A Administratively terminated          - D Debt          - M Monthly filer          - Q Quarterly filer          - T Terminated          - W Waived 
instance HasOptionalParam CommitteeCommitteeIdGet FilingFrequency where
  applyOptionalParam req (FilingFrequency xs) =
    req `setQuery` toQueryColl MultiParamArray ("filing_frequency", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  A two year election cycle that the committee was active- (after original registration date but before expiration date in FEC Form 1s) The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CommitteeCommitteeIdGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdGet MimeJSON


-- *** committeeCommitteeIdHistoryCycleGet

-- | @GET \/committee\/{committee_id}\/history\/{cycle}\/@
-- 
--  Explore a filer's characteristics over time. This can be particularly useful if the committees change treasurers, designation, or `committee_type`. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdHistoryCycleGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CycleInt -- ^ "cycle" -   A two year election cycle that the committee was active- (after original registration date but before expiration date in FEC Form 1s) The cycle begins with an odd year and is named for its ending, even year. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdHistoryCycleGet MimeNoContent CommitteeHistoryPage MimeJSON
committeeCommitteeIdHistoryCycleGet (ApiKey apiKey) (CycleInt cycle) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/history/",toPath cycle,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdHistoryCycleGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdHistoryCycleGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdHistoryCycleGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdHistoryCycleGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdHistoryCycleGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdHistoryCycleGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "election_full" - Aggregate values over full election period
instance HasOptionalParam CommitteeCommitteeIdHistoryCycleGet ElectionFull where
  applyOptionalParam req (ElectionFull xs) =
    req `setQuery` toQuery ("election_full", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdHistoryCycleGet MimeJSON


-- *** committeeCommitteeIdHistoryGet

-- | @GET \/committee\/{committee_id}\/history\/@
-- 
--  Explore a filer's characteristics over time. This can be particularly useful if the committees change treasurers, designation, or `committee_type`. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdHistoryGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdHistoryGet MimeNoContent CommitteeHistoryPage MimeJSON
committeeCommitteeIdHistoryGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/history/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdHistoryGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdHistoryGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdHistoryGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdHistoryGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdHistoryGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdHistoryGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "election_full" - Aggregate values over full election period
instance HasOptionalParam CommitteeCommitteeIdHistoryGet ElectionFull where
  applyOptionalParam req (ElectionFull xs) =
    req `setQuery` toQuery ("election_full", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdHistoryGet MimeJSON


-- *** committeesGet

-- | @GET \/committees\/@
-- 
--  Fetch basic information about committees and filers. Use parameters to filter for particular characteristics.  
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeesGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest CommitteesGet MimeNoContent CommitteePage MimeJSON
committeesGet (ApiKey apiKey) =
  _mkRequest "GET" ["/committees/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteesGet  

-- | /Optional Param/ "treasurer_name" - Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
instance HasOptionalParam CommitteesGet TreasurerName where
  applyOptionalParam req (TreasurerName xs) =
    req `setQuery` toQueryColl MultiParamArray ("treasurer_name", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteesGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteesGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "designation" - The one-letter designation code of the organization:          - A authorized by a candidate          - J joint fundraising committee          - P principal campaign committee of a candidate          - U unauthorized          - B lobbyist/registrant PAC          - D leadership PAC 
instance HasOptionalParam CommitteesGet Designation where
  applyOptionalParam req (Designation xs) =
    req `setQuery` toQueryColl MultiParamArray ("designation", Just xs)

-- | /Optional Param/ "min_first_file_date" - Filter for committees whose first filing was received on or after this date
instance HasOptionalParam CommitteesGet MinFirstFileDate where
  applyOptionalParam req (MinFirstFileDate xs) =
    req `setQuery` toQuery ("min_first_file_date", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteesGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "filing_frequency" - The one-letter      code of the filing frequency:          - A Administratively terminated          - D Debt          - M Monthly filer          - Q Quarterly filer          - T Terminated          - W Waived 
instance HasOptionalParam CommitteesGet FilingFrequency where
  applyOptionalParam req (FilingFrequency xs) =
    req `setQuery` toQueryColl MultiParamArray ("filing_frequency", Just xs)

-- | /Optional Param/ "party" - Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
instance HasOptionalParam CommitteesGet Party where
  applyOptionalParam req (Party xs) =
    req `setQuery` toQueryColl MultiParamArray ("party", Just xs)

-- | /Optional Param/ "state" - US state or territory
instance HasOptionalParam CommitteesGet State where
  applyOptionalParam req (State xs) =
    req `setQuery` toQueryColl MultiParamArray ("state", Just xs)

-- | /Optional Param/ "cycle" -  A two year election cycle that the committee was active- (after original registration date but before expiration date in FEC Form 1s) The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CommitteesGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "candidate_id" -  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
instance HasOptionalParam CommitteesGet CandidateId where
  applyOptionalParam req (CandidateId xs) =
    req `setQuery` toQueryColl MultiParamArray ("candidate_id", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteesGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "max_first_file_date" - Filter for committees whose first filing was received on or before this date
instance HasOptionalParam CommitteesGet MaxFirstFileDate where
  applyOptionalParam req (MaxFirstFileDate xs) =
    req `setQuery` toQuery ("max_first_file_date", Just xs)

-- | /Optional Param/ "year" - A year that the committee was active— (after original registration date     or filing but before expiration date)
instance HasOptionalParam CommitteesGet Year[Int] where
  applyOptionalParam req (Year[Int] xs) =
    req `setQuery` toQueryColl MultiParamArray ("year", Just xs)

-- | /Optional Param/ "organization_type" - The one-letter code for the kind for organization:         - C corporation         - L labor organization         - M membership organization         - T trade association         - V cooperative         - W corporation without capital stock 
instance HasOptionalParam CommitteesGet OrganizationType where
  applyOptionalParam req (OrganizationType xs) =
    req `setQuery` toQueryColl MultiParamArray ("organization_type", Just xs)

-- | /Optional Param/ "committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam CommitteesGet CommitteeType2 where
  applyOptionalParam req (CommitteeType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_type", Just xs)

-- | /Optional Param/ "max_last_f1_date" - Filter for committees whose latest Form 1 was received on or before this date
instance HasOptionalParam CommitteesGet MaxLastF1Date where
  applyOptionalParam req (MaxLastF1Date xs) =
    req `setQuery` toQuery ("max_last_f1_date", Just xs)

-- | /Optional Param/ "min_last_f1_date" - Filter for committees whose latest Form 1 was received on or after this date
instance HasOptionalParam CommitteesGet MinLastF1Date where
  applyOptionalParam req (MinLastF1Date xs) =
    req `setQuery` toQuery ("min_last_f1_date", Just xs)

-- | /Optional Param/ "q" - The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
instance HasOptionalParam CommitteesGet Q where
  applyOptionalParam req (Q xs) =
    req `setQuery` toQueryColl MultiParamArray ("q", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteesGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam CommitteesGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)
-- | @application/json@
instance Produces CommitteesGet MimeJSON

