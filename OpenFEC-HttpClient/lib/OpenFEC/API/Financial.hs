{-
   OpenFEC

   This API allows you to explore the way candidates and committees fund their campaigns.    The FEC API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There is a lot of data, but a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in schedule_a.    Get an [API key here](https://api.data.gov/signup/). That will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 120 calls per minute to [APIinfo@fec.gov](mailto:apiinfo@fec.gov). You can also ask questions and discuss the data in the [FEC data Google Group](https://groups.google.com/forum/#!forum/fec-data). API changes will also be added to this group in advance of the change.       The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://transition.fec.gov/pages/brochures/saleuse.shtml).    [View our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!

   OpenAPI spec version: 2.0
   OpenFEC API version: 1.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : OpenFEC.API.Financial
-}

{-# LANGUAGE FlexibleContexts      #-}
{-# LANGUAGE FlexibleInstances     #-}
{-# LANGUAGE MonoLocalBinds        #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings     #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenFEC.API.Financial where

import           OpenFEC.Core
import           OpenFEC.MimeTypes
import           OpenFEC.Model                         as M

import qualified Data.Aeson                            as A
import qualified Data.ByteString                       as B
import qualified Data.ByteString.Lazy                  as BL
import qualified Data.Data                             as P (TypeRep, Typeable,
                                                             typeOf, typeRep)
import qualified Data.Foldable                         as P
import qualified Data.Map                              as Map
import qualified Data.Maybe                            as P
import qualified Data.Proxy                            as P (Proxy (..))
import qualified Data.Set                              as Set
import qualified Data.String                           as P
import qualified Data.Text                             as T
import qualified Data.Text.Encoding                    as T
import qualified Data.Text.Lazy                        as TL
import qualified Data.Text.Lazy.Encoding               as TL
import qualified Data.Time                             as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media                    as ME
import qualified Network.HTTP.Types                    as NH
import qualified Web.FormUrlEncoded                    as WH
import qualified Web.HttpApiData                       as WH

import           Data.Text                             (Text)
import           GHC.Base                              ((<|>))

import           Prelude                               (Applicative, Bool (..),
                                                        Char, Double, FilePath,
                                                        Float, Functor, Int,
                                                        Integer, Maybe (..),
                                                        Monad, String, fmap,
                                                        maybe, mempty, pure,
                                                        undefined, ($), (.),
                                                        (/=), (<$>), (<*>),
                                                        (==), (>>=))
import qualified Prelude                               as P

-- * Operations


-- ** Financial

-- *** committeeCommitteeIdReportsGet

-- | @GET \/committee\/{committee_id}\/reports\/@
--
--  Each report represents the summary information from FEC Form 3, Form 3X and Form 3P. These reports have key statistics that illuminate the financial status of a given committee. Things like cash on hand, debts owed by committee, total receipts, and total disbursements are especially helpful for understanding a committee's financial dealings.  By default, this endpoint includes both amended and final versions of each report. To restrict to only the final versions of each report, use `is_amended=false`; to view only reports that have been amended, use `is_amended=true`.  Several different reporting structures exist, depending on the type of organization that submits financial information. To see an example of these reporting requirements, look at the summary and detailed summary pages of FEC Form 3, Form 3X, and Form 3P.  DISCLAIMER: The field labels contained within this resource are subject to change.  We are attempting to succinctly label these fields while conveying clear meaning to ensure accessibility for all users.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
committeeCommitteeIdReportsGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
  -> OpenFECRequest CommitteeCommitteeIdReportsGet MimeNoContent CommitteeReportsPage MimeJSON
committeeCommitteeIdReportsGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/reports/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdReportsGet

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdReportsGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdReportsGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)

-- | /Optional Param/ "min_total_contributions" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinTotalContributions where
  applyOptionalParam req (MinTotalContributions xs) =
    req `setQuery` toQuery ("min_total_contributions", Just xs)

-- | /Optional Param/ "max_disbursements_amount" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxDisbursementsAmount where
  applyOptionalParam req (MaxDisbursementsAmount xs) =
    req `setQuery` toQuery ("max_disbursements_amount", Just xs)

-- | /Optional Param/ "type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account
instance HasOptionalParam CommitteeCommitteeIdReportsGet ParamType where
  applyOptionalParam req (ParamType xs) =
    req `setQuery` toQueryColl MultiParamArray ("type", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdReportsGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "max_total_contributions" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxTotalContributions where
  applyOptionalParam req (MaxTotalContributions xs) =
    req `setQuery` toQuery ("max_total_contributions", Just xs)

-- | /Optional Param/ "beginning_image_number" -  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.
instance HasOptionalParam CommitteeCommitteeIdReportsGet BeginningImageNumber where
  applyOptionalParam req (BeginningImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("beginning_image_number", Just xs)

-- | /Optional Param/ "min_receipts_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinReceiptsAmount where
  applyOptionalParam req (MinReceiptsAmount xs) =
    req `setQuery` toQuery ("min_receipts_amount", Just xs)

-- | /Optional Param/ "min_independent_expenditures" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinIndependentExpenditures where
  applyOptionalParam req (MinIndependentExpenditures xs) =
    req `setQuery` toQuery ("min_independent_expenditures", Just xs)

-- | /Optional Param/ "max_independent_expenditures" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxIndependentExpenditures where
  applyOptionalParam req (MaxIndependentExpenditures xs) =
    req `setQuery` toQuery ("max_independent_expenditures", Just xs)

-- | /Optional Param/ "min_party_coordinated_expenditures" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinPartyCoordinatedExpenditures where
  applyOptionalParam req (MinPartyCoordinatedExpenditures xs) =
    req `setQuery` toQuery ("min_party_coordinated_expenditures", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.
instance HasOptionalParam CommitteeCommitteeIdReportsGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "max_party_coordinated_expenditures" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxPartyCoordinatedExpenditures where
  applyOptionalParam req (MaxPartyCoordinatedExpenditures xs) =
    req `setQuery` toQuery ("max_party_coordinated_expenditures", Just xs)

-- | /Optional Param/ "candidate_id" -  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office.
instance HasOptionalParam CommitteeCommitteeIdReportsGet CandidateIdText where
  applyOptionalParam req (CandidateIdText xs) =
    req `setQuery` toQuery ("candidate_id", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdReportsGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "year" -  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.
instance HasOptionalParam CommitteeCommitteeIdReportsGet Year where
  applyOptionalParam req (Year xs) =
    req `setQuery` toQueryColl MultiParamArray ("year", Just xs)

-- | /Optional Param/ "is_amended" - Report has been amended
instance HasOptionalParam CommitteeCommitteeIdReportsGet IsAmended where
  applyOptionalParam req (IsAmended xs) =
    req `setQuery` toQuery ("is_amended", Just xs)

-- | /Optional Param/ "max_cash_on_hand_end_period_amount" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxCashOnHandEndPeriodAmount where
  applyOptionalParam req (MaxCashOnHandEndPeriodAmount xs) =
    req `setQuery` toQuery ("max_cash_on_hand_end_period_amount", Just xs)

-- | /Optional Param/ "min_cash_on_hand_end_period_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinCashOnHandEndPeriodAmount where
  applyOptionalParam req (MinCashOnHandEndPeriodAmount xs) =
    req `setQuery` toQuery ("min_cash_on_hand_end_period_amount", Just xs)

-- | /Optional Param/ "max_receipts_amount" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxReceiptsAmount where
  applyOptionalParam req (MaxReceiptsAmount xs) =
    req `setQuery` toQuery ("max_receipts_amount", Just xs)

-- | /Optional Param/ "min_debts_owed_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinDebtsOwedAmount where
  applyOptionalParam req (MinDebtsOwedAmount xs) =
    req `setQuery` toQuery ("min_debts_owed_amount", Just xs)

-- | /Optional Param/ "max_debts_owed_expenditures" - Filter for all amounts less than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MaxDebtsOwedExpenditures where
  applyOptionalParam req (MaxDebtsOwedExpenditures xs) =
    req `setQuery` toQuery ("max_debts_owed_expenditures", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdReportsGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "min_disbursements_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam CommitteeCommitteeIdReportsGet MinDisbursementsAmount where
  applyOptionalParam req (MinDisbursementsAmount xs) =
    req `setQuery` toQuery ("min_disbursements_amount", Just xs)

-- | /Optional Param/ "report_type" - Report type; prefix with \"-\" to exclude. Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)
instance HasOptionalParam CommitteeCommitteeIdReportsGet ReportType2 where
  applyOptionalParam req (ReportType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_type", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdReportsGet MimeJSON


-- *** committeeCommitteeIdTotalsGet

-- | @GET \/committee\/{committee_id}\/totals\/@
--
--  This endpoint provides information about a committee's Form 3, Form 3X, or Form 3P financial reports, which are aggregated by two-year period. We refer to two-year periods as a `cycle`.  The cycle is named after the even-numbered year and includes the year before it. To see totals from 2013 and 2014, you would use 2014. In odd-numbered years, the current cycle is the next year â€” for example, in 2015, the current cycle is 2016.  For presidential and Senate candidates, multiple two-year cycles exist between elections.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
committeeCommitteeIdTotalsGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
  -> OpenFECRequest CommitteeCommitteeIdTotalsGet MimeNoContent CommitteeTotalsPage MimeJSON
committeeCommitteeIdTotalsGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/totals/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdTotalsGet

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdTotalsGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdTotalsGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "designation" - The one-letter designation code of the organization:          - A authorized by a candidate          - J joint fundraising committee          - P principal campaign committee of a candidate          - U unauthorized          - B lobbyist/registrant PAC          - D leadership PAC
instance HasOptionalParam CommitteeCommitteeIdTotalsGet DesignationText where
  applyOptionalParam req (DesignationText xs) =
    req `setQuery` toQuery ("designation", Just xs)

-- | /Optional Param/ "type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account
instance HasOptionalParam CommitteeCommitteeIdTotalsGet ParamType where
  applyOptionalParam req (ParamType xs) =
    req `setQuery` toQuery ("type", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdTotalsGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdTotalsGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.
instance HasOptionalParam CommitteeCommitteeIdTotalsGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdTotalsGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdTotalsGet MimeJSON


-- *** electionsGet

-- | @GET \/elections\/@
--
--  Look at the top-level financial information for all candidates running for the same office.  Choose a 2-year cycle, and `house`, `senate` or `presidential`.  If you are looking for a Senate seat, you will need to select the state using a two-letter abbreviation.  House races require state and a two-digit district number.  Since this endpoint reflects financial information, it will only have candidates once they file financial reporting forms. Query the `/candidates` endpoint to see an up to date list of all the candidates that filed to run for a particular seat.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
electionsGet
  :: Office2 -- ^ "office" -  Federal office candidate runs for: H, S or P
  -> ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> CycleInt -- ^ "cycle" -   Two-year election cycle in which a candidate runs for office. Calculated from FEC Form 2. The cycle begins with an odd year and is named for its ending, even year. This cycle follows the traditional house election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. To see data for the entire four years of a presidential term or six years of a senatorial term, you will need the `election_full` flag.
  -> OpenFECRequest ElectionsGet MimeNoContent ElectionPage MimeJSON
electionsGet (Office2 office) (ApiKey apiKey) (CycleInt cycle) =
  _mkRequest "GET" ["/elections/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("office", Just office)
    `setQuery` toQuery ("api_key", Just apiKey)
    `setQuery` toQuery ("cycle", Just cycle)

data ElectionsGet

-- | /Optional Param/ "district" - Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
instance HasOptionalParam ElectionsGet DistrictText where
  applyOptionalParam req (DistrictText xs) =
    req `setQuery` toQuery ("district", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam ElectionsGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam ElectionsGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam ElectionsGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "state" - US state or territory where a candidate runs for office
instance HasOptionalParam ElectionsGet StateText where
  applyOptionalParam req (StateText xs) =
    req `setQuery` toQuery ("state", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam ElectionsGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam ElectionsGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "election_full" - Aggregate values over full election period
instance HasOptionalParam ElectionsGet ElectionFull where
  applyOptionalParam req (ElectionFull xs) =
    req `setQuery` toQuery ("election_full", Just xs)
-- | @application/json@
instance Produces ElectionsGet MimeJSON


-- *** electionsSearchGet

-- | @GET \/elections\/search\/@
--
--  List elections by cycle, office, state, and district.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
electionsSearchGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> OpenFECRequest ElectionsSearchGet MimeNoContent ElectionsListPage MimeJSON
electionsSearchGet (ApiKey apiKey) =
  _mkRequest "GET" ["/elections/search/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data ElectionsSearchGet

-- | /Optional Param/ "district" - Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
instance HasOptionalParam ElectionsSearchGet District where
  applyOptionalParam req (District xs) =
    req `setQuery` toQueryColl MultiParamArray ("district", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam ElectionsSearchGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam ElectionsSearchGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)
instance HasOptionalParam ElectionsSearchGet Office3 where
  applyOptionalParam req (Office3 xs) =
    req `setQuery` toQueryColl MultiParamArray ("office", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam ElectionsSearchGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "zip" - Zip code
instance HasOptionalParam ElectionsSearchGet Zip where
  applyOptionalParam req (Zip xs) =
    req `setQuery` toQueryColl MultiParamArray ("zip", Just xs)

-- | /Optional Param/ "state" - US state or territory where a candidate runs for office
instance HasOptionalParam ElectionsSearchGet State where
  applyOptionalParam req (State xs) =
    req `setQuery` toQueryColl MultiParamArray ("state", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam ElectionsSearchGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Two-year election cycle in which a candidate runs for office. Calculated from FEC Form 2. The cycle begins with an odd year and is named for its ending, even year. This cycle follows the traditional house election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. To see data for the entire four years of a presidential term or six years of a senatorial term, you will need the `election_full` flag.
instance HasOptionalParam ElectionsSearchGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam ElectionsSearchGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces ElectionsSearchGet MimeJSON


-- *** electionsSummaryGet

-- | @GET \/elections\/summary\/@
--
--  List elections by cycle, office, state, and district.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
electionsSummaryGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> Office2 -- ^ "office" -  Federal office candidate runs for: H, S or P
  -> CycleInt -- ^ "cycle" -   Two-year election cycle in which a candidate runs for office. Calculated from FEC Form 2. The cycle begins with an odd year and is named for its ending, even year. This cycle follows the traditional house election cycle and subdivides the presidential and Senate elections into comparable two-year blocks. To see data for the entire four years of a presidential term or six years of a senatorial term, you will need the `election_full` flag.
  -> OpenFECRequest ElectionsSummaryGet MimeNoContent ElectionSummary MimeJSON
electionsSummaryGet (ApiKey apiKey) (Office2 office) (CycleInt cycle) =
  _mkRequest "GET" ["/elections/summary/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)
    `setQuery` toQuery ("office", Just office)
    `setQuery` toQuery ("cycle", Just cycle)

data ElectionsSummaryGet

-- | /Optional Param/ "district" - Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
instance HasOptionalParam ElectionsSummaryGet DistrictText where
  applyOptionalParam req (DistrictText xs) =
    req `setQuery` toQuery ("district", Just xs)

-- | /Optional Param/ "state" - US state or territory where a candidate runs for office
instance HasOptionalParam ElectionsSummaryGet StateText where
  applyOptionalParam req (StateText xs) =
    req `setQuery` toQuery ("state", Just xs)

-- | /Optional Param/ "election_full" - Aggregate values over full election period
instance HasOptionalParam ElectionsSummaryGet ElectionFull where
  applyOptionalParam req (ElectionFull xs) =
    req `setQuery` toQuery ("election_full", Just xs)
-- | @application/json@
instance Produces ElectionsSummaryGet MimeJSON


-- *** reportsCommitteeTypeGet

-- | @GET \/reports\/{committee_type}\/@
--
--  Each report represents the summary information from FEC Form 3, Form 3X and Form 3P. These reports have key statistics that illuminate the financial status of a given committee. Things like cash on hand, debts owed by committee, total receipts, and total disbursements are especially helpful for understanding a committee's financial dealings.  By default, this endpoint includes both amended and final versions of each report. To restrict to only the final versions of each report, use `is_amended=false`; to view only reports that have been amended, use `is_amended=true`.  Several different reporting structures exist, depending on the type of organization that submits financial information. To see an example of these reporting requirements, look at the summary and detailed summary pages of FEC Form 3, Form 3X, and Form 3P.  DISCLAIMER: The field labels contained within this resource are subject to change.  We are attempting to succinctly label these fields while conveying clear meaning to ensure accessibility for all users.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
reportsCommitteeTypeGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> CommitteeType3 -- ^ "committeeType" -  House, Senate, presidential, independent expenditure only
  -> OpenFECRequest ReportsCommitteeTypeGet MimeNoContent CommitteeReportsPage MimeJSON
reportsCommitteeTypeGet (ApiKey apiKey) (CommitteeType3 committeeType) =
  _mkRequest "GET" ["/reports/",toPath committeeType,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data ReportsCommitteeTypeGet

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam ReportsCommitteeTypeGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "max_disbursements_amount" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxDisbursementsAmount where
  applyOptionalParam req (MaxDisbursementsAmount xs) =
    req `setQuery` toQuery ("max_disbursements_amount", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam ReportsCommitteeTypeGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "beginning_image_number" -  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document.
instance HasOptionalParam ReportsCommitteeTypeGet BeginningImageNumber where
  applyOptionalParam req (BeginningImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("beginning_image_number", Just xs)

-- | /Optional Param/ "min_receipts_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinReceiptsAmount where
  applyOptionalParam req (MinReceiptsAmount xs) =
    req `setQuery` toQuery ("min_receipts_amount", Just xs)

-- | /Optional Param/ "min_party_coordinated_expenditures" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinPartyCoordinatedExpenditures where
  applyOptionalParam req (MinPartyCoordinatedExpenditures xs) =
    req `setQuery` toQuery ("min_party_coordinated_expenditures", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.
instance HasOptionalParam ReportsCommitteeTypeGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "max_party_coordinated_expenditures" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxPartyCoordinatedExpenditures where
  applyOptionalParam req (MaxPartyCoordinatedExpenditures xs) =
    req `setQuery` toQuery ("max_party_coordinated_expenditures", Just xs)

-- | /Optional Param/ "max_receipt_date" - Selects all items received by FEC before this date or datetime
instance HasOptionalParam ReportsCommitteeTypeGet MaxReceiptDateDateTime where
  applyOptionalParam req (MaxReceiptDateDateTime xs) =
    req `setQuery` toQuery ("max_receipt_date", Just xs)

-- | /Optional Param/ "is_amended" - Report has been amended
instance HasOptionalParam ReportsCommitteeTypeGet IsAmended where
  applyOptionalParam req (IsAmended xs) =
    req `setQuery` toQuery ("is_amended", Just xs)

-- | /Optional Param/ "min_receipt_date" - Selects all items received by FEC after this date or datetime
instance HasOptionalParam ReportsCommitteeTypeGet MinReceiptDateDateTime where
  applyOptionalParam req (MinReceiptDateDateTime xs) =
    req `setQuery` toQuery ("min_receipt_date", Just xs)

-- | /Optional Param/ "max_cash_on_hand_end_period_amount" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxCashOnHandEndPeriodAmount where
  applyOptionalParam req (MaxCashOnHandEndPeriodAmount xs) =
    req `setQuery` toQuery ("max_cash_on_hand_end_period_amount", Just xs)

-- | /Optional Param/ "most_recent" - Report is either new or is the most-recently filed amendment
instance HasOptionalParam ReportsCommitteeTypeGet MostRecent where
  applyOptionalParam req (MostRecent xs) =
    req `setQuery` toQuery ("most_recent", Just xs)

-- | /Optional Param/ "max_debts_owed_expenditures" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxDebtsOwedExpenditures where
  applyOptionalParam req (MaxDebtsOwedExpenditures xs) =
    req `setQuery` toQuery ("max_debts_owed_expenditures", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
instance HasOptionalParam ReportsCommitteeTypeGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)

-- | /Optional Param/ "report_type" - Report type; prefix with \"-\" to exclude. Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE)
instance HasOptionalParam ReportsCommitteeTypeGet ReportType2 where
  applyOptionalParam req (ReportType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_type", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam ReportsCommitteeTypeGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)

-- | /Optional Param/ "filer_type" - The method used to file with the FEC, either electronic or on paper.
instance HasOptionalParam ReportsCommitteeTypeGet FilerType where
  applyOptionalParam req (FilerType xs) =
    req `setQuery` toQuery ("filer_type", Just xs)

-- | /Optional Param/ "min_total_contributions" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinTotalContributions where
  applyOptionalParam req (MinTotalContributions xs) =
    req `setQuery` toQuery ("min_total_contributions", Just xs)

-- | /Optional Param/ "type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account
instance HasOptionalParam ReportsCommitteeTypeGet ParamType where
  applyOptionalParam req (ParamType xs) =
    req `setQuery` toQueryColl MultiParamArray ("type", Just xs)

-- | /Optional Param/ "max_total_contributions" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxTotalContributions where
  applyOptionalParam req (MaxTotalContributions xs) =
    req `setQuery` toQuery ("max_total_contributions", Just xs)

-- | /Optional Param/ "min_independent_expenditures" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinIndependentExpenditures where
  applyOptionalParam req (MinIndependentExpenditures xs) =
    req `setQuery` toQuery ("min_independent_expenditures", Just xs)

-- | /Optional Param/ "amendment_indicator" -      -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary      Null might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.
instance HasOptionalParam ReportsCommitteeTypeGet AmendmentIndicator where
  applyOptionalParam req (AmendmentIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("amendment_indicator", Just xs)

-- | /Optional Param/ "max_independent_expenditures" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxIndependentExpenditures where
  applyOptionalParam req (MaxIndependentExpenditures xs) =
    req `setQuery` toQuery ("max_independent_expenditures", Just xs)

-- | /Optional Param/ "candidate_id" -  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office.
instance HasOptionalParam ReportsCommitteeTypeGet CandidateIdText where
  applyOptionalParam req (CandidateIdText xs) =
    req `setQuery` toQuery ("candidate_id", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam ReportsCommitteeTypeGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "year" -  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date.
instance HasOptionalParam ReportsCommitteeTypeGet Year where
  applyOptionalParam req (Year xs) =
    req `setQuery` toQueryColl MultiParamArray ("year", Just xs)

-- | /Optional Param/ "min_cash_on_hand_end_period_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinCashOnHandEndPeriodAmount where
  applyOptionalParam req (MinCashOnHandEndPeriodAmount xs) =
    req `setQuery` toQuery ("min_cash_on_hand_end_period_amount", Just xs)

-- | /Optional Param/ "max_receipts_amount" - Filter for all amounts less than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MaxReceiptsAmount where
  applyOptionalParam req (MaxReceiptsAmount xs) =
    req `setQuery` toQuery ("max_receipts_amount", Just xs)

-- | /Optional Param/ "min_debts_owed_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinDebtsOwedAmount where
  applyOptionalParam req (MinDebtsOwedAmount xs) =
    req `setQuery` toQuery ("min_debts_owed_amount", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam ReportsCommitteeTypeGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "min_disbursements_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam ReportsCommitteeTypeGet MinDisbursementsAmount where
  applyOptionalParam req (MinDisbursementsAmount xs) =
    req `setQuery` toQuery ("min_disbursements_amount", Just xs)
-- | @application/json@
instance Produces ReportsCommitteeTypeGet MimeJSON


-- *** totalsByEntityGet

-- | @GET \/totals\/by_entity\/@
--
--  Provides cumulative receipt totals by entity type, over a two year cycle. Totals are adjusted to avoid double counting.  This is [the sql](https://github.com/fecgov/openFEC/blob/develop/data/migrations/V41__large_aggregates.sql) that creates these calculations.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
totalsByEntityGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> CycleInt -- ^ "cycle" -   Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.
  -> OpenFECRequest TotalsByEntityGet MimeNoContent EntityReceiptDisbursementTotalsPage MimeJSON
totalsByEntityGet (ApiKey apiKey) (CycleInt cycle) =
  _mkRequest "GET" ["/totals/by_entity/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)
    `setQuery` toQuery ("cycle", Just cycle)

data TotalsByEntityGet

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam TotalsByEntityGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam TotalsByEntityGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam TotalsByEntityGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam TotalsByEntityGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam TotalsByEntityGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces TotalsByEntityGet MimeJSON


-- *** totalsCommitteeTypeGet

-- | @GET \/totals\/{committee_type}\/@
--
--  This endpoint provides information about a committee's Form 3, Form 3X, or Form 3P financial reports, which are aggregated by two-year period. We refer to two-year periods as a `cycle`.  The cycle is named after the even-numbered year and includes the year before it. To see totals from 2013 and 2014, you would use 2014. In odd-numbered years, the current cycle is the next year â€” for example, in 2015, the current cycle is 2016.  For presidential and Senate candidates, multiple two-year cycles exist between elections.
--
-- AuthMethod: 'AuthApiKeyApiKey'
--
totalsCommitteeTypeGet
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup.
  -> CommitteeType4 -- ^ "committeeType" -  House, Senate, presidential, independent expenditure only
  -> OpenFECRequest TotalsCommitteeTypeGet MimeNoContent CommitteeTotalsPage MimeJSON
totalsCommitteeTypeGet (ApiKey apiKey) (CommitteeType4 committeeType) =
  _mkRequest "GET" ["/totals/",toPath committeeType,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data TotalsCommitteeTypeGet

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam TotalsCommitteeTypeGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam TotalsCommitteeTypeGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
instance HasOptionalParam TotalsCommitteeTypeGet CommitteeIdText where
  applyOptionalParam req (CommitteeIdText xs) =
    req `setQuery` toQuery ("committee_id", Just xs)

-- | /Optional Param/ "committee_type_full" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account
instance HasOptionalParam TotalsCommitteeTypeGet CommitteeTypeFull where
  applyOptionalParam req (CommitteeTypeFull xs) =
    req `setQuery` toQuery ("committee_type_full", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam TotalsCommitteeTypeGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "committee_designation_full" - The one-letter designation code of the organization:          - A authorized by a candidate          - J joint fundraising committee          - P principal campaign committee of a candidate          - U unauthorized          - B lobbyist/registrant PAC          - D leadership PAC
instance HasOptionalParam TotalsCommitteeTypeGet CommitteeDesignationFull where
  applyOptionalParam req (CommitteeDesignationFull xs) =
    req `setQuery` toQuery ("committee_designation_full", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam TotalsCommitteeTypeGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year.
instance HasOptionalParam TotalsCommitteeTypeGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam TotalsCommitteeTypeGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces TotalsCommitteeTypeGet MimeJSON

