{-
   OpenFEC

   This API allows you to explore the way candidates and committees fund their campaigns.    The FEC API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There is a lot of data, but a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in schedule_a.    Get an [API key here](https://api.data.gov/signup/). That will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 120 calls per minute to [APIinfo@fec.gov](mailto:apiinfo@fec.gov). You can also ask questions and discuss the data in the [FEC data Google Group](https://groups.google.com/forum/#!forum/fec-data). API changes will also be added to this group in advance of the change.       The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://transition.fec.gov/pages/brochures/saleuse.shtml).    [View our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!

   OpenAPI spec version: 2.0
   OpenFEC API version: 1.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : OpenFEC.API.Filings
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenFEC.API.Filings where

import OpenFEC.Core
import OpenFEC.MimeTypes
import OpenFEC.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Filings

-- *** candidateCandidateIdFilingsGet

-- | @GET \/candidate\/{candidate_id}\/filings\/@
-- 
--  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
candidateCandidateIdFilingsGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CandidateIdText -- ^ "candidateId" -   A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
  -> OpenFECRequest CandidateCandidateIdFilingsGet MimeNoContent FilingsPage MimeJSON
candidateCandidateIdFilingsGet (ApiKey apiKey) (CandidateIdText candidateId) =
  _mkRequest "GET" ["/candidate/",toPath candidateId,"/filings/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CandidateCandidateIdFilingsGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CandidateCandidateIdFilingsGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "primary_general_indicator" - Primary, general or special election indicator
instance HasOptionalParam CandidateCandidateIdFilingsGet PrimaryGeneralIndicator where
  applyOptionalParam req (PrimaryGeneralIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("primary_general_indicator", Just xs)

-- | /Optional Param/ "filer_type" - The method used to file with the FEC, either electronic or on paper.
instance HasOptionalParam CandidateCandidateIdFilingsGet FilerType where
  applyOptionalParam req (FilerType xs) =
    req `setQuery` toQuery ("filer_type", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CandidateCandidateIdFilingsGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CandidateCandidateIdFilingsGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "beginning_image_number" -  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document. 
instance HasOptionalParam CandidateCandidateIdFilingsGet BeginningImageNumber where
  applyOptionalParam req (BeginningImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("beginning_image_number", Just xs)

-- | /Optional Param/ "party" - Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
instance HasOptionalParam CandidateCandidateIdFilingsGet Party where
  applyOptionalParam req (Party xs) =
    req `setQuery` toQueryColl MultiParamArray ("party", Just xs)

-- | /Optional Param/ "state" - US state or territory where a candidate runs for office
instance HasOptionalParam CandidateCandidateIdFilingsGet State where
  applyOptionalParam req (State xs) =
    req `setQuery` toQueryColl MultiParamArray ("state", Just xs)

-- | /Optional Param/ "amendment_indicator" -      -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary      Null might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment. 
instance HasOptionalParam CandidateCandidateIdFilingsGet AmendmentIndicator where
  applyOptionalParam req (AmendmentIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("amendment_indicator", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CandidateCandidateIdFilingsGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CandidateCandidateIdFilingsGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "district" - Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
instance HasOptionalParam CandidateCandidateIdFilingsGet District where
  applyOptionalParam req (District xs) =
    req `setQuery` toQueryColl MultiParamArray ("district", Just xs)

-- | /Optional Param/ "max_receipt_date" - Selects all items received by FEC before this date
instance HasOptionalParam CandidateCandidateIdFilingsGet MaxReceiptDate where
  applyOptionalParam req (MaxReceiptDate xs) =
    req `setQuery` toQuery ("max_receipt_date", Just xs)

-- | /Optional Param/ "committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam CandidateCandidateIdFilingsGet CommitteeTypeText where
  applyOptionalParam req (CommitteeTypeText xs) =
    req `setQuery` toQuery ("committee_type", Just xs)

-- | /Optional Param/ "office" - Federal office candidate runs for: H, S or P
instance HasOptionalParam CandidateCandidateIdFilingsGet Office where
  applyOptionalParam req (Office xs) =
    req `setQuery` toQueryColl MultiParamArray ("office", Just xs)

-- | /Optional Param/ "is_amended" - Filing has been amended
instance HasOptionalParam CandidateCandidateIdFilingsGet IsAmended where
  applyOptionalParam req (IsAmended xs) =
    req `setQuery` toQuery ("is_amended", Just xs)

-- | /Optional Param/ "file_number" - Filing ID number
instance HasOptionalParam CandidateCandidateIdFilingsGet FileNumber where
  applyOptionalParam req (FileNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("file_number", Just xs)

-- | /Optional Param/ "min_receipt_date" - Selects all items received by FEC after this date
instance HasOptionalParam CandidateCandidateIdFilingsGet MinReceiptDate where
  applyOptionalParam req (MinReceiptDate xs) =
    req `setQuery` toQuery ("min_receipt_date", Just xs)

-- | /Optional Param/ "request_type" - Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status 
instance HasOptionalParam CandidateCandidateIdFilingsGet RequestType where
  applyOptionalParam req (RequestType xs) =
    req `setQuery` toQueryColl MultiParamArray ("request_type", Just xs)

-- | /Optional Param/ "most_recent" - Filing is either new or is the most-recently filed amendment
instance HasOptionalParam CandidateCandidateIdFilingsGet MostRecent where
  applyOptionalParam req (MostRecent xs) =
    req `setQuery` toQuery ("most_recent", Just xs)

-- | /Optional Param/ "document_type" -  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice 
instance HasOptionalParam CandidateCandidateIdFilingsGet DocumentType where
  applyOptionalParam req (DocumentType xs) =
    req `setQuery` toQueryColl MultiParamArray ("document_type", Just xs)

-- | /Optional Param/ "report_year" -  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
instance HasOptionalParam CandidateCandidateIdFilingsGet ReportYear where
  applyOptionalParam req (ReportYear xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_year", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CandidateCandidateIdFilingsGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "form_type" -  Indicates the type of form that was filed. ex: F1, F2, F3P, F3X etc... 
instance HasOptionalParam CandidateCandidateIdFilingsGet FormType where
  applyOptionalParam req (FormType xs) =
    req `setQuery` toQueryColl MultiParamArray ("form_type", Just xs)

-- | /Optional Param/ "report_type" - Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
instance HasOptionalParam CandidateCandidateIdFilingsGet ReportType2 where
  applyOptionalParam req (ReportType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_type", Just xs)
-- | @application/json@
instance Produces CandidateCandidateIdFilingsGet MimeJSON


-- *** committeeCommitteeIdFilingsGet

-- | @GET \/committee\/{committee_id}\/filings\/@
-- 
--  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdFilingsGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdFilingsGet MimeNoContent FilingsPage MimeJSON
committeeCommitteeIdFilingsGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/filings/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdFilingsGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdFilingsGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "primary_general_indicator" - Primary, general or special election indicator
instance HasOptionalParam CommitteeCommitteeIdFilingsGet PrimaryGeneralIndicator where
  applyOptionalParam req (PrimaryGeneralIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("primary_general_indicator", Just xs)

-- | /Optional Param/ "filer_type" - The method used to file with the FEC, either electronic or on paper.
instance HasOptionalParam CommitteeCommitteeIdFilingsGet FilerType where
  applyOptionalParam req (FilerType xs) =
    req `setQuery` toQuery ("filer_type", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdFilingsGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdFilingsGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "beginning_image_number" -  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document. 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet BeginningImageNumber where
  applyOptionalParam req (BeginningImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("beginning_image_number", Just xs)

-- | /Optional Param/ "party" - Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
instance HasOptionalParam CommitteeCommitteeIdFilingsGet Party where
  applyOptionalParam req (Party xs) =
    req `setQuery` toQueryColl MultiParamArray ("party", Just xs)

-- | /Optional Param/ "state" - US state or territory where a candidate runs for office
instance HasOptionalParam CommitteeCommitteeIdFilingsGet State where
  applyOptionalParam req (State xs) =
    req `setQuery` toQueryColl MultiParamArray ("state", Just xs)

-- | /Optional Param/ "amendment_indicator" -      -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary      Null might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment. 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet AmendmentIndicator where
  applyOptionalParam req (AmendmentIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("amendment_indicator", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdFilingsGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "district" - Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
instance HasOptionalParam CommitteeCommitteeIdFilingsGet District where
  applyOptionalParam req (District xs) =
    req `setQuery` toQueryColl MultiParamArray ("district", Just xs)

-- | /Optional Param/ "max_receipt_date" - Selects all items received by FEC before this date
instance HasOptionalParam CommitteeCommitteeIdFilingsGet MaxReceiptDate where
  applyOptionalParam req (MaxReceiptDate xs) =
    req `setQuery` toQuery ("max_receipt_date", Just xs)

-- | /Optional Param/ "committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet CommitteeTypeText where
  applyOptionalParam req (CommitteeTypeText xs) =
    req `setQuery` toQuery ("committee_type", Just xs)

-- | /Optional Param/ "office" - Federal office candidate runs for: H, S or P
instance HasOptionalParam CommitteeCommitteeIdFilingsGet Office where
  applyOptionalParam req (Office xs) =
    req `setQuery` toQueryColl MultiParamArray ("office", Just xs)

-- | /Optional Param/ "is_amended" - Filing has been amended
instance HasOptionalParam CommitteeCommitteeIdFilingsGet IsAmended where
  applyOptionalParam req (IsAmended xs) =
    req `setQuery` toQuery ("is_amended", Just xs)

-- | /Optional Param/ "file_number" - Filing ID number
instance HasOptionalParam CommitteeCommitteeIdFilingsGet FileNumber where
  applyOptionalParam req (FileNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("file_number", Just xs)

-- | /Optional Param/ "min_receipt_date" - Selects all items received by FEC after this date
instance HasOptionalParam CommitteeCommitteeIdFilingsGet MinReceiptDate where
  applyOptionalParam req (MinReceiptDate xs) =
    req `setQuery` toQuery ("min_receipt_date", Just xs)

-- | /Optional Param/ "request_type" - Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet RequestType where
  applyOptionalParam req (RequestType xs) =
    req `setQuery` toQueryColl MultiParamArray ("request_type", Just xs)

-- | /Optional Param/ "most_recent" - Filing is either new or is the most-recently filed amendment
instance HasOptionalParam CommitteeCommitteeIdFilingsGet MostRecent where
  applyOptionalParam req (MostRecent xs) =
    req `setQuery` toQuery ("most_recent", Just xs)

-- | /Optional Param/ "document_type" -  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet DocumentType where
  applyOptionalParam req (DocumentType xs) =
    req `setQuery` toQueryColl MultiParamArray ("document_type", Just xs)

-- | /Optional Param/ "report_year" -  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet ReportYear where
  applyOptionalParam req (ReportYear xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_year", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdFilingsGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "form_type" -  Indicates the type of form that was filed. ex: F1, F2, F3P, F3X etc... 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet FormType where
  applyOptionalParam req (FormType xs) =
    req `setQuery` toQueryColl MultiParamArray ("form_type", Just xs)

-- | /Optional Param/ "report_type" - Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
instance HasOptionalParam CommitteeCommitteeIdFilingsGet ReportType2 where
  applyOptionalParam req (ReportType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_type", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdFilingsGet MimeJSON


-- *** filingsGet

-- | @GET \/filings\/@
-- 
--  All official records and reports filed by or delivered to the FEC.  Note: because the filings data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
filingsGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest FilingsGet MimeNoContent FilingsPage MimeJSON
filingsGet (ApiKey apiKey) =
  _mkRequest "GET" ["/filings/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data FilingsGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam FilingsGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "primary_general_indicator" - Primary, general or special election indicator
instance HasOptionalParam FilingsGet PrimaryGeneralIndicator where
  applyOptionalParam req (PrimaryGeneralIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("primary_general_indicator", Just xs)

-- | /Optional Param/ "filer_type" - The method used to file with the FEC, either electronic or on paper.
instance HasOptionalParam FilingsGet FilerType where
  applyOptionalParam req (FilerType xs) =
    req `setQuery` toQuery ("filer_type", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam FilingsGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam FilingsGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "beginning_image_number" -  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document. 
instance HasOptionalParam FilingsGet BeginningImageNumber where
  applyOptionalParam req (BeginningImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("beginning_image_number", Just xs)

-- | /Optional Param/ "party" - Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
instance HasOptionalParam FilingsGet Party where
  applyOptionalParam req (Party xs) =
    req `setQuery` toQueryColl MultiParamArray ("party", Just xs)

-- | /Optional Param/ "state" - US state or territory where a candidate runs for office
instance HasOptionalParam FilingsGet State where
  applyOptionalParam req (State xs) =
    req `setQuery` toQueryColl MultiParamArray ("state", Just xs)

-- | /Optional Param/ "amendment_indicator" -      -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary      Null might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment. 
instance HasOptionalParam FilingsGet AmendmentIndicator where
  applyOptionalParam req (AmendmentIndicator xs) =
    req `setQuery` toQueryColl MultiParamArray ("amendment_indicator", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam FilingsGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam FilingsGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "candidate_id" -  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
instance HasOptionalParam FilingsGet CandidateId where
  applyOptionalParam req (CandidateId xs) =
    req `setQuery` toQueryColl MultiParamArray ("candidate_id", Just xs)

-- | /Optional Param/ "district" - Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
instance HasOptionalParam FilingsGet District where
  applyOptionalParam req (District xs) =
    req `setQuery` toQueryColl MultiParamArray ("district", Just xs)

-- | /Optional Param/ "max_receipt_date" - Selects all items received by FEC before this date
instance HasOptionalParam FilingsGet MaxReceiptDate where
  applyOptionalParam req (MaxReceiptDate xs) =
    req `setQuery` toQuery ("max_receipt_date", Just xs)

-- | /Optional Param/ "committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam FilingsGet CommitteeTypeText where
  applyOptionalParam req (CommitteeTypeText xs) =
    req `setQuery` toQuery ("committee_type", Just xs)

-- | /Optional Param/ "office" - Federal office candidate runs for: H, S or P
instance HasOptionalParam FilingsGet Office where
  applyOptionalParam req (Office xs) =
    req `setQuery` toQueryColl MultiParamArray ("office", Just xs)

-- | /Optional Param/ "is_amended" - Filing has been amended
instance HasOptionalParam FilingsGet IsAmended where
  applyOptionalParam req (IsAmended xs) =
    req `setQuery` toQuery ("is_amended", Just xs)

-- | /Optional Param/ "file_number" - Filing ID number
instance HasOptionalParam FilingsGet FileNumber where
  applyOptionalParam req (FileNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("file_number", Just xs)

-- | /Optional Param/ "min_receipt_date" - Selects all items received by FEC after this date
instance HasOptionalParam FilingsGet MinReceiptDate where
  applyOptionalParam req (MinReceiptDate xs) =
    req `setQuery` toQuery ("min_receipt_date", Just xs)

-- | /Optional Param/ "request_type" - Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:     - 1 Statement of Organization     - 2 Report of Receipts and Expenditures (Form 3 and 3X)     - 3 Second Notice - Reports     - 4 Request for Additional Information     - 5 Informational - Reports     - 6 Second Notice - Statement of Organization     - 7 Failure to File     - 8 From Public Disclosure     - 9 From Multi Candidate Status 
instance HasOptionalParam FilingsGet RequestType where
  applyOptionalParam req (RequestType xs) =
    req `setQuery` toQueryColl MultiParamArray ("request_type", Just xs)

-- | /Optional Param/ "most_recent" - Filing is either new or is the most-recently filed amendment
instance HasOptionalParam FilingsGet MostRecent where
  applyOptionalParam req (MostRecent xs) =
    req `setQuery` toQuery ("most_recent", Just xs)

-- | /Optional Param/ "document_type" -  The type of document for documents other than reports:     - 2 24 Hour Contribution Notice     - 4 48 Hour Contribution Notice     - A Debt Settlement Statement     - B Acknowledgment of Receipt of Debt Settlement Statement     - C RFAI: Debt Settlement First Notice     - D Commission Debt Settlement Review     - E Commission Response TO Debt Settlement Request     - F Administrative Termination     - G Debt Settlement Plan Amendment     - H Disavowal Notice     - I Disavowal Response     - J Conduit Report     - K Termination Approval     - L Repeat Non-Filer Notice     - M Filing Frequency Change Notice     - N Paper Amendment to Electronic Report     - O Acknowledgment of Filing Frequency Change     - S RFAI: Debt Settlement Second     - T Miscellaneous Report TO FEC     - V Repeat Violation Notice (441A OR 441B)     - P Notice of Paper Filing     - R F3L Filing Frequency Change Notice     - Q Acknowledgment of F3L Filing Frequency Change     - U Unregistered Committee Notice 
instance HasOptionalParam FilingsGet DocumentType where
  applyOptionalParam req (DocumentType xs) =
    req `setQuery` toQueryColl MultiParamArray ("document_type", Just xs)

-- | /Optional Param/ "report_year" -  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
instance HasOptionalParam FilingsGet ReportYear where
  applyOptionalParam req (ReportYear xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_year", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam FilingsGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "form_type" -  Indicates the type of form that was filed. ex: F1, F2, F3P, F3X etc... 
instance HasOptionalParam FilingsGet FormType where
  applyOptionalParam req (FormType xs) =
    req `setQuery` toQueryColl MultiParamArray ("form_type", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam FilingsGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)

-- | /Optional Param/ "report_type" - Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
instance HasOptionalParam FilingsGet ReportType2 where
  applyOptionalParam req (ReportType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_type", Just xs)
-- | @application/json@
instance Produces FilingsGet MimeJSON


-- *** operationsLogGet

-- | @GET \/operations-log\/@
-- 
--  The Operations log contains details of each report loaded into the database. It is primarily used as status check to determine when all of the data processes, from initial entry through review are complete. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
operationsLogGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest OperationsLogGet MimeNoContent OperationsLogPage MimeJSON
operationsLogGet (ApiKey apiKey) =
  _mkRequest "GET" ["/operations-log/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data OperationsLogGet  

-- | /Optional Param/ "candidate_committee_id" -  A unique identifier of the registered filer. 
instance HasOptionalParam OperationsLogGet CandidateCommitteeId where
  applyOptionalParam req (CandidateCommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("candidate_committee_id", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam OperationsLogGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam OperationsLogGet Sort where
  applyOptionalParam req (Sort xs) =
    req `setQuery` toQueryColl MultiParamArray ("sort", Just xs)

-- | /Optional Param/ "status_num" -  Status of the transactional report.     -0- Transaction is entered            into the system.           But not verified.     -1- Transaction is verified. 
instance HasOptionalParam OperationsLogGet StatusNum where
  applyOptionalParam req (StatusNum xs) =
    req `setQuery` toQueryColl MultiParamArray ("status_num", Just xs)

-- | /Optional Param/ "report_year" -  Forms with coverage date -      year from the coverage ending date. Forms without coverage date -      year from the receipt date. 
instance HasOptionalParam OperationsLogGet ReportYear where
  applyOptionalParam req (ReportYear xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_year", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam OperationsLogGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "beginning_image_number" -  Unique identifier for the electronic or paper report. This number is used to construct PDF URLs to the original document. 
instance HasOptionalParam OperationsLogGet BeginningImageNumber where
  applyOptionalParam req (BeginningImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("beginning_image_number", Just xs)

-- | /Optional Param/ "amendment_indicator" -      -N   new     -A   amendment     -T   terminated     -C   consolidated     -M   multi-candidate     -S   secondary      Null might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment. 
instance HasOptionalParam OperationsLogGet AmendmentIndicator[Text] where
  applyOptionalParam req (AmendmentIndicator[Text] xs) =
    req `setQuery` toQueryColl MultiParamArray ("amendment_indicator", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam OperationsLogGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "form_type" -  Indicates the type of form that was filed. ex: F1, F2, F3P, F3X etc... 
instance HasOptionalParam OperationsLogGet FormType where
  applyOptionalParam req (FormType xs) =
    req `setQuery` toQueryColl MultiParamArray ("form_type", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam OperationsLogGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "report_type" - Name of report where the underlying data comes from:     - 10D Pre-Election     - 10G Pre-General     - 10P Pre-Primary     - 10R Pre-Run-Off     - 10S Pre-Special     - 12C Pre-Convention     - 12G Pre-General     - 12P Pre-Primary     - 12R Pre-Run-Off     - 12S Pre-Special     - 30D Post-Election     - 30G Post-General     - 30P Post-Primary     - 30R Post-Run-Off     - 30S Post-Special     - 60D Post-Convention     - M1  January Monthly     - M10 October Monthly     - M11 November Monthly     - M12 December Monthly     - M2  February Monthly     - M3  March Monthly     - M4  April Monthly     - M5  May Monthly     - M6  June Monthly     - M7  July Monthly     - M8  August Monthly     - M9  September Monthly     - MY  Mid-Year Report     - Q1  April Quarterly     - Q2  July Quarterly     - Q3  October Quarterly     - TER Termination Report     - YE  Year-End     - 90S Post Inaugural Supplement     - 90D Post Inaugural     - 48  48 Hour Notification     - 24  24 Hour Notification     - M7S July Monthly/Semi-Annual     - MSA Monthly Semi-Annual (MY)     - MYS Monthly Year End/Semi-Annual     - Q2S July Quarterly/Semi-Annual     - QSA Quarterly Semi-Annual (MY)     - QYS Quarterly Year End/Semi-Annual     - QYE Quarterly Semi-Annual (YE)     - QMS Quarterly Mid-Year/ Semi-Annual     - MSY Monthly Semi-Annual (YE) 
instance HasOptionalParam OperationsLogGet ReportType2 where
  applyOptionalParam req (ReportType2 xs) =
    req `setQuery` toQueryColl MultiParamArray ("report_type", Just xs)
-- | @application/json@
instance Produces OperationsLogGet MimeJSON

