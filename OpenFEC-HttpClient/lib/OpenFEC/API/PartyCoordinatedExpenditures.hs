{-
   OpenFEC

   This API allows you to explore the way candidates and committees fund their campaigns.    The FEC API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There is a lot of data, but a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in schedule_a.    Get an [API key here](https://api.data.gov/signup/). That will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 120 calls per minute to [APIinfo@fec.gov](mailto:apiinfo@fec.gov). You can also ask questions and discuss the data in the [FEC data Google Group](https://groups.google.com/forum/#!forum/fec-data). API changes will also be added to this group in advance of the change.       The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://transition.fec.gov/pages/brochures/saleuse.shtml).    [View our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!

   OpenAPI spec version: 2.0
   OpenFEC API version: 1.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : OpenFEC.API.PartyCoordinatedExpenditures
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenFEC.API.PartyCoordinatedExpenditures where

import OpenFEC.Core
import OpenFEC.MimeTypes
import OpenFEC.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** PartyCoordinatedExpenditures

-- *** schedulesScheduleFGet

-- | @GET \/schedules\/schedule_f\/@
-- 
--  Schedule F, it shows all special expenditures a national or state party committee makes in connection with the general election campaigns of federal candidates.  These coordinated party expenditures do not count against the contribution limits but are subject to other limits, these limits are detailed in Chapter 7 of the FEC Campaign Guide for Political Party Committees. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleFGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest SchedulesScheduleFGet MimeNoContent InlineResponseDefault5 MimeJSON
schedulesScheduleFGet (ApiKey apiKey) =
  _mkRequest "GET" ["/schedules/schedule_f/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleFGet  

-- | /Optional Param/ "max_date" - Maximum date
instance HasOptionalParam SchedulesScheduleFGet MaxDate where
  applyOptionalParam req (MaxDate xs) =
    req `setQuery` toQuery ("max_date", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleFGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleFGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)
instance HasOptionalParam SchedulesScheduleFGet PayeeName where
  applyOptionalParam req (PayeeName xs) =
    req `setQuery` toQueryColl MultiParamArray ("payee_name", Just xs)

-- | /Optional Param/ "min_date" - Minimum date
instance HasOptionalParam SchedulesScheduleFGet MinDate where
  applyOptionalParam req (MinDate xs) =
    req `setQuery` toQuery ("min_date", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam SchedulesScheduleFGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
instance HasOptionalParam SchedulesScheduleFGet MaxImageNumber where
  applyOptionalParam req (MaxImageNumber xs) =
    req `setQuery` toQuery ("max_image_number", Just xs)

-- | /Optional Param/ "image_number" - The image number of the page where the schedule item is reported
instance HasOptionalParam SchedulesScheduleFGet ImageNumber where
  applyOptionalParam req (ImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("image_number", Just xs)

-- | /Optional Param/ "max_amount" - Filter for all amounts less than a value.
instance HasOptionalParam SchedulesScheduleFGet MaxAmount where
  applyOptionalParam req (MaxAmount xs) =
    req `setQuery` toQuery ("max_amount", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam SchedulesScheduleFGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "candidate_id" -  A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. 
instance HasOptionalParam SchedulesScheduleFGet CandidateId where
  applyOptionalParam req (CandidateId xs) =
    req `setQuery` toQueryColl MultiParamArray ("candidate_id", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleFGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "min_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam SchedulesScheduleFGet MinAmount where
  applyOptionalParam req (MinAmount xs) =
    req `setQuery` toQuery ("min_amount", Just xs)

-- | /Optional Param/ "line_number" - Filter for form and line number using the following format: `FORM-LINENUMBER`.  For example an argument such as `F3X-16` would filter down to all entries from form `F3X` line number `16`.
instance HasOptionalParam SchedulesScheduleFGet LineNumber where
  applyOptionalParam req (LineNumber xs) =
    req `setQuery` toQuery ("line_number", Just xs)
instance HasOptionalParam SchedulesScheduleFGet MinImageNumber where
  applyOptionalParam req (MinImageNumber xs) =
    req `setQuery` toQuery ("min_image_number", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleFGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam SchedulesScheduleFGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleFGet MimeJSON


-- *** schedulesScheduleFSubIdGet

-- | @GET \/schedules\/schedule_f\/{sub_id}\/@
-- 
--  Schedule F, it shows all special expenditures a national or state party committee makes in connection with the general election campaigns of federal candidates.  These coordinated party expenditures do not count against the contribution limits but are subject to other limits, these limits are detailed in Chapter 7 of the FEC Campaign Guide for Political Party Committees. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleFSubIdGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> SubId -- ^ "subId"
  -> OpenFECRequest SchedulesScheduleFSubIdGet MimeNoContent InlineResponseDefault5 MimeJSON
schedulesScheduleFSubIdGet (ApiKey apiKey) (SubId subId) =
  _mkRequest "GET" ["/schedules/schedule_f/",toPath subId,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleFSubIdGet  

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleFSubIdGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam SchedulesScheduleFSubIdGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleFSubIdGet MimeJSON

