{-
   OpenFEC

   This API allows you to explore the way candidates and committees fund their campaigns.    The FEC API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There is a lot of data, but a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in schedule_a.    Get an [API key here](https://api.data.gov/signup/). That will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 120 calls per minute to [APIinfo@fec.gov](mailto:apiinfo@fec.gov). You can also ask questions and discuss the data in the [FEC data Google Group](https://groups.google.com/forum/#!forum/fec-data). API changes will also be added to this group in advance of the change.       The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://transition.fec.gov/pages/brochures/saleuse.shtml).    [View our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!

   OpenAPI spec version: 2.0
   OpenFEC API version: 1.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : OpenFEC.API.FilerResources
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenFEC.API.FilerResources where

import OpenFEC.Core
import OpenFEC.MimeTypes
import OpenFEC.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** FilerResources

-- *** radAnalystGet

-- | @GET \/rad-analyst\/@
-- 
--  Use this endpoint to look up the RAD Analyst for a committee.  The mission of the Reports Analysis Division (RAD) is to ensure that campaigns and political committees file timely and accurate reports that fully disclose their financial activities.  RAD is responsible for reviewing statements and financial reports filed by political committees participating in federal elections, providing assistance and guidance to the committees to properly file their reports, and for taking appropriate action to ensure compliance with the Federal Election Campaign Act (FECA). 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
radAnalystGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest RadAnalystGet MimeNoContent RadAnalystPage MimeJSON
radAnalystGet (ApiKey apiKey) =
  _mkRequest "GET" ["/rad-analyst/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data RadAnalystGet  

-- | /Optional Param/ "min_assignment_update_date" - Filter results for assignment updates made after this date
instance HasOptionalParam RadAnalystGet MinAssignmentUpdateDate where
  applyOptionalParam req (MinAssignmentUpdateDate xs) =
    req `setQuery` toQuery ("min_assignment_update_date", Just xs)

-- | /Optional Param/ "analyst_id" - ID of RAD analyst
instance HasOptionalParam RadAnalystGet AnalystId where
  applyOptionalParam req (AnalystId xs) =
    req `setQuery` toQueryColl MultiParamArray ("analyst_id", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam RadAnalystGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "analyst_short_id" - Short ID of RAD analyst
instance HasOptionalParam RadAnalystGet AnalystShortId where
  applyOptionalParam req (AnalystShortId xs) =
    req `setQuery` toQueryColl MultiParamArray ("analyst_short_id", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam RadAnalystGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam RadAnalystGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)

-- | /Optional Param/ "title" - Title of RAD analyst
instance HasOptionalParam RadAnalystGet Title where
  applyOptionalParam req (Title xs) =
    req `setQuery` toQueryColl MultiParamArray ("title", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam RadAnalystGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "telephone_ext" - Telephone extension of RAD analyst
instance HasOptionalParam RadAnalystGet TelephoneExt where
  applyOptionalParam req (TelephoneExt xs) =
    req `setQuery` toQueryColl MultiParamArray ("telephone_ext", Just xs)

-- | /Optional Param/ "name" - Name of RAD analyst
instance HasOptionalParam RadAnalystGet Name where
  applyOptionalParam req (Name xs) =
    req `setQuery` toQueryColl MultiParamArray ("name", Just xs)

-- | /Optional Param/ "email" - Email of RAD analyst
instance HasOptionalParam RadAnalystGet Email where
  applyOptionalParam req (Email xs) =
    req `setQuery` toQueryColl MultiParamArray ("email", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam RadAnalystGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "max_assignment_update_date" - Filter results for assignment updates made before this date
instance HasOptionalParam RadAnalystGet MaxAssignmentUpdateDate where
  applyOptionalParam req (MaxAssignmentUpdateDate xs) =
    req `setQuery` toQuery ("max_assignment_update_date", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam RadAnalystGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces RadAnalystGet MimeJSON


-- *** stateElectionOfficeGet

-- | @GET \/state-election-office\/@
-- 
--  State laws and procedures govern elections for state or local offices as well as how candidates appear on election ballots. Contact the appropriate state election office for more information. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
stateElectionOfficeGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> StateText -- ^ "state" -   Enter a state (Ex: AK, TX, VA etc..) to find the local election offices contact information.  
  -> OpenFECRequest StateElectionOfficeGet MimeNoContent StateElectionOfficeInfoPage MimeJSON
stateElectionOfficeGet (ApiKey apiKey) (StateText state) =
  _mkRequest "GET" ["/state-election-office/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)
    `setQuery` toQuery ("state", Just state)

data StateElectionOfficeGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam StateElectionOfficeGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam StateElectionOfficeGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam StateElectionOfficeGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam StateElectionOfficeGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam StateElectionOfficeGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces StateElectionOfficeGet MimeJSON

