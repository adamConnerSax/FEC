{-
   OpenFEC

   This API allows you to explore the way candidates and committees fund their campaigns.    The FEC API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly.    There is a lot of data, but a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in schedule_a.    Get an [API key here](https://api.data.gov/signup/). That will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 120 calls per minute to [APIinfo@fec.gov](mailto:apiinfo@fec.gov). You can also ask questions and discuss the data in the [FEC data Google Group](https://groups.google.com/forum/#!forum/fec-data). API changes will also be added to this group in advance of the change.       The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data.    A few restrictions limit the way you can use FEC data. For example, you canâ€™t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://transition.fec.gov/pages/brochures/saleuse.shtml).    [View our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests!

   OpenAPI spec version: 2.0
   OpenFEC API version: 1.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : OpenFEC.API.Disbursements
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenFEC.API.Disbursements where

import OpenFEC.Core
import OpenFEC.MimeTypes
import OpenFEC.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Disbursements

-- *** committeeCommitteeIdSchedulesScheduleBByPurposeGet

-- | @GET \/committee\/{committee_id}\/schedules\/schedule_b\/by_purpose\/@
-- 
--  Schedule B disbursements aggregated by disbursement purpose category. To avoid double counting, memoed items are not included. Purpose is a combination of transaction codes, category codes and disbursement description. See the `disbursement_purpose` sql function within the migrations for more details. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdSchedulesScheduleBByPurposeGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdSchedulesScheduleBByPurposeGet MimeNoContent ScheduleBByPurposePage MimeJSON
committeeCommitteeIdSchedulesScheduleBByPurposeGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/schedules/schedule_b/by_purpose/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdSchedulesScheduleBByPurposeGet  

-- | /Optional Param/ "purpose" - Disbursement purpose category
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet Purpose where
  applyOptionalParam req (Purpose xs) =
    req `setQuery` toQueryColl MultiParamArray ("purpose", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByPurposeGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdSchedulesScheduleBByPurposeGet MimeJSON


-- *** committeeCommitteeIdSchedulesScheduleBByRecipientGet

-- | @GET \/committee\/{committee_id}\/schedules\/schedule_b\/by_recipient\/@
-- 
-- Schedule B receipts aggregated by recipient name. To avoid double counting, memoed items are not included.
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdSchedulesScheduleBByRecipientGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdSchedulesScheduleBByRecipientGet MimeNoContent ScheduleBByRecipientPage MimeJSON
committeeCommitteeIdSchedulesScheduleBByRecipientGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/schedules/schedule_b/by_recipient/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdSchedulesScheduleBByRecipientGet  

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "recipient_name" - Name of the entity receiving the disbursement
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet RecipientName where
  applyOptionalParam req (RecipientName xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_name", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdSchedulesScheduleBByRecipientGet MimeJSON


-- *** committeeCommitteeIdSchedulesScheduleBByRecipientIdGet

-- | @GET \/committee\/{committee_id}\/schedules\/schedule_b\/by_recipient_id\/@
-- 
-- Schedule B receipts aggregated by recipient committee ID, if applicable. To avoid double counting, memoed items are not included.
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
committeeCommitteeIdSchedulesScheduleBByRecipientIdGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> CommitteeIdText -- ^ "committeeId" -   A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
  -> OpenFECRequest CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet MimeNoContent ScheduleBByRecipientIDPage MimeJSON
committeeCommitteeIdSchedulesScheduleBByRecipientIdGet (ApiKey apiKey) (CommitteeIdText committeeId) =
  _mkRequest "GET" ["/committee/",toPath committeeId,"/schedules/schedule_b/by_recipient_id/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "recipient_id" - The FEC identifier should be represented here if the entity receiving the disbursement is registered with the FEC.
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet RecipientId where
  applyOptionalParam req (RecipientId xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_id", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces CommitteeCommitteeIdSchedulesScheduleBByRecipientIdGet MimeJSON


-- *** schedulesScheduleBByPurposeGet

-- | @GET \/schedules\/schedule_b\/by_purpose\/@
-- 
--  Schedule B disbursements aggregated by disbursement purpose category. To avoid double counting, memoed items are not included. Purpose is a combination of transaction codes, category codes and disbursement description. See the `disbursement_purpose` sql function within the migrations for more details. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleBByPurposeGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest SchedulesScheduleBByPurposeGet MimeNoContent ScheduleBByPurposePage MimeJSON
schedulesScheduleBByPurposeGet (ApiKey apiKey) =
  _mkRequest "GET" ["/schedules/schedule_b/by_purpose/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleBByPurposeGet  

-- | /Optional Param/ "purpose" - Disbursement purpose category
instance HasOptionalParam SchedulesScheduleBByPurposeGet Purpose where
  applyOptionalParam req (Purpose xs) =
    req `setQuery` toQueryColl MultiParamArray ("purpose", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleBByPurposeGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleBByPurposeGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleBByPurposeGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam SchedulesScheduleBByPurposeGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleBByPurposeGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam SchedulesScheduleBByPurposeGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleBByPurposeGet MimeJSON


-- *** schedulesScheduleBByRecipientGet

-- | @GET \/schedules\/schedule_b\/by_recipient\/@
-- 
-- Schedule B receipts aggregated by recipient name. To avoid double counting, memoed items are not included.
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleBByRecipientGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest SchedulesScheduleBByRecipientGet MimeNoContent ScheduleBByRecipientPage MimeJSON
schedulesScheduleBByRecipientGet (ApiKey apiKey) =
  _mkRequest "GET" ["/schedules/schedule_b/by_recipient/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleBByRecipientGet  

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleBByRecipientGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleBByRecipientGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleBByRecipientGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "recipient_name" - Name of the entity receiving the disbursement
instance HasOptionalParam SchedulesScheduleBByRecipientGet RecipientName where
  applyOptionalParam req (RecipientName xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_name", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam SchedulesScheduleBByRecipientGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleBByRecipientGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam SchedulesScheduleBByRecipientGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleBByRecipientGet MimeJSON


-- *** schedulesScheduleBByRecipientIdGet

-- | @GET \/schedules\/schedule_b\/by_recipient_id\/@
-- 
-- Schedule B receipts aggregated by recipient committee ID, if applicable. To avoid double counting, memoed items are not included.
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleBByRecipientIdGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest SchedulesScheduleBByRecipientIdGet MimeNoContent ScheduleBByRecipientIDPage MimeJSON
schedulesScheduleBByRecipientIdGet (ApiKey apiKey) =
  _mkRequest "GET" ["/schedules/schedule_b/by_recipient_id/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleBByRecipientIdGet  

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "cycle" -  Filter records to only those that were applicable to a given two-year period.The cycle begins with an odd year and is named for its ending, even year. 
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet Cycle where
  applyOptionalParam req (Cycle xs) =
    req `setQuery` toQueryColl MultiParamArray ("cycle", Just xs)

-- | /Optional Param/ "recipient_id" - The FEC identifier should be represented here if the entity receiving the disbursement is registered with the FEC.
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet RecipientId where
  applyOptionalParam req (RecipientId xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_id", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam SchedulesScheduleBByRecipientIdGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleBByRecipientIdGet MimeJSON


-- *** schedulesScheduleBEfileGet

-- | @GET \/schedules\/schedule_b\/efile\/@
-- 
--  Efiling endpoints provide real-time campaign finance data for electronic filers.  These endpoints are perfect for watching filings roll in when you want to know the latest information. Efiling endpoints only contain the most recent two years worth of data and don't contain the processed and coded data that you can find on the other endpoints. Those endpoints are better for in-depth analysis.  Senate candidates and committees are required to file by paper. Other committees who raise and spend less than $50,000 in a calendar can choose whether to file electronically or by paper.  DISCLAIMER: The field labels contained within this resource are subject to change.  We are attempting to succinctly label these fields while conveying clear meaning to ensure accessibility for all users. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleBEfileGet 
  :: ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest SchedulesScheduleBEfileGet MimeNoContent ScheduleBEfilePage MimeJSON
schedulesScheduleBEfileGet (ApiKey apiKey) =
  _mkRequest "GET" ["/schedules/schedule_b/efile/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleBEfileGet  

-- | /Optional Param/ "max_date" - When sorting by `disbursement_date`, this is populated with the `disbursement_date` of the last result. However, you will need to pass the index of that last result to `last_index` to get the next page.
instance HasOptionalParam SchedulesScheduleBEfileGet MaxDate where
  applyOptionalParam req (MaxDate xs) =
    req `setQuery` toQuery ("max_date", Just xs)

-- | /Optional Param/ "recipient_state" - State of recipient
instance HasOptionalParam SchedulesScheduleBEfileGet RecipientState where
  applyOptionalParam req (RecipientState xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_state", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleBEfileGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "recipient_city" - City of recipient
instance HasOptionalParam SchedulesScheduleBEfileGet RecipientCity where
  applyOptionalParam req (RecipientCity xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_city", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleBEfileGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam SchedulesScheduleBEfileGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)

-- | /Optional Param/ "min_amount" - Filter for all amounts less than a value.
instance HasOptionalParam SchedulesScheduleBEfileGet MinAmount where
  applyOptionalParam req (MinAmount xs) =
    req `setQuery` toQuery ("min_amount", Just xs)

-- | /Optional Param/ "min_date" - When sorting by `disbursement_date`, this is populated with the `disbursement_date` of the last result. However, you will need to pass the index of that last result to `last_index` to get the next page.
instance HasOptionalParam SchedulesScheduleBEfileGet MinDate where
  applyOptionalParam req (MinDate xs) =
    req `setQuery` toQuery ("min_date", Just xs)

-- | /Optional Param/ "page" - For paginating through results, starting at page 1
instance HasOptionalParam SchedulesScheduleBEfileGet Page where
  applyOptionalParam req (Page xs) =
    req `setQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "image_number" - The image number of the page where the schedule item is reported
instance HasOptionalParam SchedulesScheduleBEfileGet ImageNumber where
  applyOptionalParam req (ImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("image_number", Just xs)

-- | /Optional Param/ "max_amount" - Filter for all amounts less than a value.
instance HasOptionalParam SchedulesScheduleBEfileGet MaxAmount where
  applyOptionalParam req (MaxAmount xs) =
    req `setQuery` toQuery ("max_amount", Just xs)

-- | /Optional Param/ "disbursement_description" - Description of disbursement
instance HasOptionalParam SchedulesScheduleBEfileGet DisbursementDescription where
  applyOptionalParam req (DisbursementDescription xs) =
    req `setQuery` toQueryColl MultiParamArray ("disbursement_description", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleBEfileGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleBEfileGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleBEfileGet MimeJSON


-- *** schedulesScheduleBGet

-- | @GET \/schedules\/schedule_b\/@
-- 
--  Schedule B filings describe itemized disbursements. This data explains how committees and other filers spend their money. These figures are reported as part of forms F3, F3X and F3P.  The data is divided in two-year periods, called `two_year_transaction_period`, which is derived from the `report_year` submitted of the corresponding form. If no value is supplied, the results will default to the most recent two-year period that is named after the ending, even-numbered year.  Due to the large quantity of Schedule B filings, this endpoint is not paginated by page number. Instead, you can request the next page of results by adding the values in the `last_indexes` object from `pagination` to the URL of your last request. For example, when sorting by `disbursement_date`, you might receive a page of results with the following pagination information:  ``` pagination: {     pages: 965191,     per_page: 20,     count: 19303814,     last_indexes: {         last_index: \"230906248\",         last_disbursement_date: \"2014-07-04\"     } } ```  To fetch the next page of sorted results, append `last_index=230906248` and `last_disbursement_date=2014-07-04` to the URL.  We strongly advise paging through these results by using the sort indices (defaults to sort by disbursement date, e.g. `last_disbursement_date`), otherwise some resources may be unintentionally filtered out.  This resource uses keyset pagination to improve query performance and these indices are required to properly page through this large dataset.  Note: because the Schedule B data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleBGet 
  :: TwoYearTransactionPeriod -- ^ "twoYearTransactionPeriod" -   This is a two-year period that is derived from the year a transaction took place in the Itemized Schedule A and Schedule B tables. In cases where we have the date of the transaction (contribution_receipt_date in schedules/schedule_a, disbursement_date in schedules/schedule_b) the two_year_transaction_period is named after the ending, even-numbered year. If we do not have the date  of the transaction, we fall back to using the report year (report_year in both tables) instead,  making the same cycle adjustment as necessary. If no transaction year is specified, the results default to the most current cycle. 
  -> ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> OpenFECRequest SchedulesScheduleBGet MimeNoContent ScheduleBPage MimeJSON
schedulesScheduleBGet (TwoYearTransactionPeriod twoYearTransactionPeriod) (ApiKey apiKey) =
  _mkRequest "GET" ["/schedules/schedule_b/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("two_year_transaction_period", Just twoYearTransactionPeriod)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleBGet  

-- | /Optional Param/ "max_date" - Maximum date
instance HasOptionalParam SchedulesScheduleBGet MaxDate where
  applyOptionalParam req (MaxDate xs) =
    req `setQuery` toQuery ("max_date", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleBGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "recipient_city" - City of recipient
instance HasOptionalParam SchedulesScheduleBGet RecipientCity where
  applyOptionalParam req (RecipientCity xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_city", Just xs)

-- | /Optional Param/ "disbursement_purpose_category" - Disbursement purpose category
instance HasOptionalParam SchedulesScheduleBGet DisbursementPurposeCategory where
  applyOptionalParam req (DisbursementPurposeCategory xs) =
    req `setQuery` toQueryColl MultiParamArray ("disbursement_purpose_category", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleBGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "recipient_committee_id" - The FEC identifier should be represented here if the contributor is registered with the FEC.
instance HasOptionalParam SchedulesScheduleBGet RecipientCommitteeId where
  applyOptionalParam req (RecipientCommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_committee_id", Just xs)

-- | /Optional Param/ "min_date" - Minimum date
instance HasOptionalParam SchedulesScheduleBGet MinDate where
  applyOptionalParam req (MinDate xs) =
    req `setQuery` toQuery ("min_date", Just xs)
instance HasOptionalParam SchedulesScheduleBGet MaxImageNumber where
  applyOptionalParam req (MaxImageNumber xs) =
    req `setQuery` toQuery ("max_image_number", Just xs)

-- | /Optional Param/ "image_number" - The image number of the page where the schedule item is reported
instance HasOptionalParam SchedulesScheduleBGet ImageNumber where
  applyOptionalParam req (ImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("image_number", Just xs)

-- | /Optional Param/ "last_disbursement_date" - When sorting by `disbursement_date`, this is populated with the `disbursement_date` of the last result. However, you will need to pass the index of that last result to `last_index` to get the next page.
instance HasOptionalParam SchedulesScheduleBGet LastDisbursementDate where
  applyOptionalParam req (LastDisbursementDate xs) =
    req `setQuery` toQuery ("last_disbursement_date", Just xs)

-- | /Optional Param/ "max_amount" - Filter for all amounts less than a value.
instance HasOptionalParam SchedulesScheduleBGet MaxAmount where
  applyOptionalParam req (MaxAmount xs) =
    req `setQuery` toQuery ("max_amount", Just xs)

-- | /Optional Param/ "disbursement_description" - Description of disbursement
instance HasOptionalParam SchedulesScheduleBGet DisbursementDescription where
  applyOptionalParam req (DisbursementDescription xs) =
    req `setQuery` toQueryColl MultiParamArray ("disbursement_description", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleBGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "recipient_state" - State of recipient
instance HasOptionalParam SchedulesScheduleBGet RecipientState where
  applyOptionalParam req (RecipientState xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_state", Just xs)

-- | /Optional Param/ "last_index" - Index of last result from previous page
instance HasOptionalParam SchedulesScheduleBGet LastIndex where
  applyOptionalParam req (LastIndex xs) =
    req `setQuery` toQuery ("last_index", Just xs)

-- | /Optional Param/ "spender_committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam SchedulesScheduleBGet SpenderCommitteeType where
  applyOptionalParam req (SpenderCommitteeType xs) =
    req `setQuery` toQueryColl MultiParamArray ("spender_committee_type", Just xs)

-- | /Optional Param/ "recipient_name" - Name of recipient
instance HasOptionalParam SchedulesScheduleBGet RecipientName where
  applyOptionalParam req (RecipientName xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_name", Just xs)

-- | /Optional Param/ "min_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam SchedulesScheduleBGet MinAmount where
  applyOptionalParam req (MinAmount xs) =
    req `setQuery` toQuery ("min_amount", Just xs)

-- | /Optional Param/ "line_number" - Filter for form and line number using the following format: `FORM-LINENUMBER`.  For example an argument such as `F3X-16` would filter down to all entries from form `F3X` line number `16`.
instance HasOptionalParam SchedulesScheduleBGet LineNumber where
  applyOptionalParam req (LineNumber xs) =
    req `setQuery` toQuery ("line_number", Just xs)
instance HasOptionalParam SchedulesScheduleBGet MinImageNumber where
  applyOptionalParam req (MinImageNumber xs) =
    req `setQuery` toQuery ("min_image_number", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleBGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam SchedulesScheduleBGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)

-- | /Optional Param/ "last_disbursement_amount" - When sorting by `disbursement_amount`, this is populated with the `disbursement_amount` of the last result.  However, you will need to pass the index of that last result to `last_index` to get the next page.
instance HasOptionalParam SchedulesScheduleBGet LastDisbursementAmount where
  applyOptionalParam req (LastDisbursementAmount xs) =
    req `setQuery` toQuery ("last_disbursement_amount", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleBGet MimeJSON


-- *** schedulesScheduleBSubIdGet

-- | @GET \/schedules\/schedule_b\/{sub_id}\/@
-- 
--  Schedule B filings describe itemized disbursements. This data explains how committees and other filers spend their money. These figures are reported as part of forms F3, F3X and F3P.  The data is divided in two-year periods, called `two_year_transaction_period`, which is derived from the `report_year` submitted of the corresponding form. If no value is supplied, the results will default to the most recent two-year period that is named after the ending, even-numbered year.  Due to the large quantity of Schedule B filings, this endpoint is not paginated by page number. Instead, you can request the next page of results by adding the values in the `last_indexes` object from `pagination` to the URL of your last request. For example, when sorting by `disbursement_date`, you might receive a page of results with the following pagination information:  ``` pagination: {     pages: 965191,     per_page: 20,     count: 19303814,     last_indexes: {         last_index: \"230906248\",         last_disbursement_date: \"2014-07-04\"     } } ```  To fetch the next page of sorted results, append `last_index=230906248` and `last_disbursement_date=2014-07-04` to the URL.  We strongly advise paging through these results by using the sort indices (defaults to sort by disbursement date, e.g. `last_disbursement_date`), otherwise some resources may be unintentionally filtered out.  This resource uses keyset pagination to improve query performance and these indices are required to properly page through this large dataset.  Note: because the Schedule B data includes many records, counts for large result sets are approximate; you will want to page through the records until no records are returned. 
-- 
-- AuthMethod: 'AuthApiKeyApiKey'
-- 
schedulesScheduleBSubIdGet 
  :: TwoYearTransactionPeriod -- ^ "twoYearTransactionPeriod" -   This is a two-year period that is derived from the year a transaction took place in the Itemized Schedule A and Schedule B tables. In cases where we have the date of the transaction (contribution_receipt_date in schedules/schedule_a, disbursement_date in schedules/schedule_b) the two_year_transaction_period is named after the ending, even-numbered year. If we do not have the date  of the transaction, we fall back to using the report year (report_year in both tables) instead,  making the same cycle adjustment as necessary. If no transaction year is specified, the results default to the most current cycle. 
  -> ApiKey -- ^ "apiKey" -   API key for https://api.data.gov. Get one at https://api.data.gov/signup. 
  -> SubId -- ^ "subId"
  -> OpenFECRequest SchedulesScheduleBSubIdGet MimeNoContent ScheduleBPage MimeJSON
schedulesScheduleBSubIdGet (TwoYearTransactionPeriod twoYearTransactionPeriod) (ApiKey apiKey) (SubId subId) =
  _mkRequest "GET" ["/schedules/schedule_b/",toPath subId,"/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiKey)
    `setQuery` toQuery ("two_year_transaction_period", Just twoYearTransactionPeriod)
    `setQuery` toQuery ("api_key", Just apiKey)

data SchedulesScheduleBSubIdGet  

-- | /Optional Param/ "max_date" - Maximum date
instance HasOptionalParam SchedulesScheduleBSubIdGet MaxDate where
  applyOptionalParam req (MaxDate xs) =
    req `setQuery` toQuery ("max_date", Just xs)

-- | /Optional Param/ "sort_null_only" - Toggle that filters out all rows having sort column that is non-null
instance HasOptionalParam SchedulesScheduleBSubIdGet SortNullOnly where
  applyOptionalParam req (SortNullOnly xs) =
    req `setQuery` toQuery ("sort_null_only", Just xs)

-- | /Optional Param/ "recipient_city" - City of recipient
instance HasOptionalParam SchedulesScheduleBSubIdGet RecipientCity where
  applyOptionalParam req (RecipientCity xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_city", Just xs)

-- | /Optional Param/ "disbursement_purpose_category" - Disbursement purpose category
instance HasOptionalParam SchedulesScheduleBSubIdGet DisbursementPurposeCategory where
  applyOptionalParam req (DisbursementPurposeCategory xs) =
    req `setQuery` toQueryColl MultiParamArray ("disbursement_purpose_category", Just xs)

-- | /Optional Param/ "sort" - Provide a field to sort by. Use - for descending order.
instance HasOptionalParam SchedulesScheduleBSubIdGet SortText where
  applyOptionalParam req (SortText xs) =
    req `setQuery` toQuery ("sort", Just xs)

-- | /Optional Param/ "recipient_committee_id" - The FEC identifier should be represented here if the contributor is registered with the FEC.
instance HasOptionalParam SchedulesScheduleBSubIdGet RecipientCommitteeId where
  applyOptionalParam req (RecipientCommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_committee_id", Just xs)

-- | /Optional Param/ "min_date" - Minimum date
instance HasOptionalParam SchedulesScheduleBSubIdGet MinDate where
  applyOptionalParam req (MinDate xs) =
    req `setQuery` toQuery ("min_date", Just xs)
instance HasOptionalParam SchedulesScheduleBSubIdGet MaxImageNumber where
  applyOptionalParam req (MaxImageNumber xs) =
    req `setQuery` toQuery ("max_image_number", Just xs)

-- | /Optional Param/ "image_number" - The image number of the page where the schedule item is reported
instance HasOptionalParam SchedulesScheduleBSubIdGet ImageNumber where
  applyOptionalParam req (ImageNumber xs) =
    req `setQuery` toQueryColl MultiParamArray ("image_number", Just xs)

-- | /Optional Param/ "last_disbursement_date" - When sorting by `disbursement_date`, this is populated with the `disbursement_date` of the last result. However, you will need to pass the index of that last result to `last_index` to get the next page.
instance HasOptionalParam SchedulesScheduleBSubIdGet LastDisbursementDate where
  applyOptionalParam req (LastDisbursementDate xs) =
    req `setQuery` toQuery ("last_disbursement_date", Just xs)

-- | /Optional Param/ "max_amount" - Filter for all amounts less than a value.
instance HasOptionalParam SchedulesScheduleBSubIdGet MaxAmount where
  applyOptionalParam req (MaxAmount xs) =
    req `setQuery` toQuery ("max_amount", Just xs)

-- | /Optional Param/ "disbursement_description" - Description of disbursement
instance HasOptionalParam SchedulesScheduleBSubIdGet DisbursementDescription where
  applyOptionalParam req (DisbursementDescription xs) =
    req `setQuery` toQueryColl MultiParamArray ("disbursement_description", Just xs)

-- | /Optional Param/ "sort_hide_null" - Hide null values on sorted column(s).
instance HasOptionalParam SchedulesScheduleBSubIdGet SortHideNull where
  applyOptionalParam req (SortHideNull xs) =
    req `setQuery` toQuery ("sort_hide_null", Just xs)

-- | /Optional Param/ "recipient_state" - State of recipient
instance HasOptionalParam SchedulesScheduleBSubIdGet RecipientState where
  applyOptionalParam req (RecipientState xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_state", Just xs)

-- | /Optional Param/ "last_index" - Index of last result from previous page
instance HasOptionalParam SchedulesScheduleBSubIdGet LastIndex where
  applyOptionalParam req (LastIndex xs) =
    req `setQuery` toQuery ("last_index", Just xs)

-- | /Optional Param/ "spender_committee_type" - The one-letter type code of the organization:         - C communication cost         - D delegate         - E electioneering communication         - H House         - I independent expenditor (person or group)         - N PAC - nonqualified         - O independent expenditure-only (super PACs)         - P presidential         - Q PAC - qualified         - S Senate         - U single candidate independent expenditure         - V PAC with non-contribution account, nonqualified         - W PAC with non-contribution account, qualified         - X party, nonqualified         - Y party, qualified         - Z national party non-federal account 
instance HasOptionalParam SchedulesScheduleBSubIdGet SpenderCommitteeType where
  applyOptionalParam req (SpenderCommitteeType xs) =
    req `setQuery` toQueryColl MultiParamArray ("spender_committee_type", Just xs)

-- | /Optional Param/ "recipient_name" - Name of recipient
instance HasOptionalParam SchedulesScheduleBSubIdGet RecipientName where
  applyOptionalParam req (RecipientName xs) =
    req `setQuery` toQueryColl MultiParamArray ("recipient_name", Just xs)

-- | /Optional Param/ "min_amount" - Filter for all amounts greater than a value.
instance HasOptionalParam SchedulesScheduleBSubIdGet MinAmount where
  applyOptionalParam req (MinAmount xs) =
    req `setQuery` toQuery ("min_amount", Just xs)

-- | /Optional Param/ "line_number" - Filter for form and line number using the following format: `FORM-LINENUMBER`.  For example an argument such as `F3X-16` would filter down to all entries from form `F3X` line number `16`.
instance HasOptionalParam SchedulesScheduleBSubIdGet LineNumber where
  applyOptionalParam req (LineNumber xs) =
    req `setQuery` toQuery ("line_number", Just xs)
instance HasOptionalParam SchedulesScheduleBSubIdGet MinImageNumber where
  applyOptionalParam req (MinImageNumber xs) =
    req `setQuery` toQuery ("min_image_number", Just xs)

-- | /Optional Param/ "per_page" - The number of results returned per page. Defaults to 20.
instance HasOptionalParam SchedulesScheduleBSubIdGet PerPage where
  applyOptionalParam req (PerPage xs) =
    req `setQuery` toQuery ("per_page", Just xs)

-- | /Optional Param/ "committee_id" -  A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits. 
instance HasOptionalParam SchedulesScheduleBSubIdGet CommitteeId where
  applyOptionalParam req (CommitteeId xs) =
    req `setQuery` toQueryColl MultiParamArray ("committee_id", Just xs)

-- | /Optional Param/ "last_disbursement_amount" - When sorting by `disbursement_amount`, this is populated with the `disbursement_amount` of the last result.  However, you will need to pass the index of that last result to `last_index` to get the next page.
instance HasOptionalParam SchedulesScheduleBSubIdGet LastDisbursementAmount where
  applyOptionalParam req (LastDisbursementAmount xs) =
    req `setQuery` toQuery ("last_disbursement_amount", Just xs)
-- | @application/json@
instance Produces SchedulesScheduleBSubIdGet MimeJSON

